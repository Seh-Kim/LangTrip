<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.sist.e_learning.payment.PaymentMapper">

    <!-- payments 시퀀스 채번 -->
    <select id="selectNextPaymentSeq" resultType="String">
        SELECT 'MID_' || TO_CHAR(SEQ_payments.NEXTVAL) FROM DUAL
    </select>

    <!-- payments insert -->
   <insert id="insertPayment" parameterType="kr.co.sist.e_learning.payment.PaymentRequestDTO">
    <selectKey keyProperty="paymentSeq" resultType="Long" order="BEFORE">
        SELECT SEQ_payments.NEXTVAL FROM DUAL
    </selectKey>

    INSERT INTO payments (
        payment_seq,
        imp_uid,
        wallet_seq,
        method,
        provider,
        payment_amount,
        payment_status,
        created_at,
        currency,
        channel,
        name,
        receipt_url,
        mile_amount,
        fee_rate,
        user_seq
    ) VALUES (
        #{paymentSeq},
        #{impUid, jdbcType=VARCHAR},
        #{walletSeq},
        #{method, jdbcType=VARCHAR},
        #{provider, jdbcType=VARCHAR},
        #{paymentAmount, jdbcType=NUMERIC},
        #{paymentStatus, jdbcType=VARCHAR},
        SYSDATE,
        #{currency, jdbcType=VARCHAR},
        #{channel, jdbcType=VARCHAR},
        #{name, jdbcType=VARCHAR},
        #{receiptUrl, jdbcType=VARCHAR},
        #{mileAmount, jdbcType=NUMERIC},
        #{feeRate, jdbcType=NUMERIC},
        #{userSeq, jdbcType=NUMERIC}
    )
</insert>
   

    <select id="selectAdminPaymentList" parameterType="kr.co.sist.e_learning.admin.payments.AdminPaymentSearchDTO" resultType="kr.co.sist.e_learning.admin.payments.AdminPaymentListDTO">
        SELECT
            p.payment_seq AS paymentId,
            u.user_seq AS userId,
            l.title AS lectureTitle,
            p.amount AS amount,
            p.method,
            p.status AS status,
            p.created_at AS paymentDate
        FROM
            payments p
        JOIN
            users u ON p.user_seq = u.user_seq
        LEFT JOIN
            lectures l ON p.lecture_seq = l.lecture_seq
        <where>
            <if test="paymentType != null and paymentType != 'all'">
                AND p.method = #{paymentType}
            </if>
            <if test="searchKeyword != null and searchKeyword != ''">
                AND (u.user_id LIKE &apos;%&apos; || #{searchKeyword} || &apos;%&apos; OR l.lecture_title LIKE &apos;%&apos; || #{searchKeyword} || &apos;%&apos;)
            </if>
            <if test="startDate != null and startDate != ''">
                AND p.created_at >= TO_DATE(#{startDate}, &apos;YYYY-MM-DD&apos;)
            </if>
            <if test="endDate != null and endDate != ''">
                AND p.created_at &lt;= <![CDATA[TO_DATE(#{endDate} || ' 23:59:59', 'YYYY-MM-DD HH24:MI:SS')]]>
            </if>
        </where>
        ORDER BY
            p.created_at DESC
        OFFSET #{startRow} ROWS FETCH NEXT #{pageSize} ROWS ONLY
    </select>

    <select id="selectAdminPaymentCount" parameterType="kr.co.sist.e_learning.admin.payments.AdminPaymentSearchDTO" resultType="int">
        SELECT
            COUNT(*)
        FROM
            payments p
        JOIN
            users u ON p.user_seq = u.user_seq
        LEFT JOIN
            lectures l ON p.lecture_seq = l.lecture_seq
        <where>
            <if test="paymentType != null and paymentType != 'all'">
                AND p.method = #{paymentType}
            </if>
            <if test="searchKeyword != null and searchKeyword != ''">
                AND (u.user_id LIKE &apos;%&apos; || #{searchKeyword} || &apos;%&apos; OR l.lecture_title LIKE &apos;%&apos; || #{searchKeyword} || &apos;%&apos;)
            </if>
            <if test="startDate != null and startDate != ''">
                AND p.created_at >= TO_DATE(#{startDate}, &apos;YYYY-MM-DD&apos;)
            </if>
            <if test="endDate != null and endDate != ''">
                AND p.created_at &lt;= <![CDATA[TO_DATE(#{endDate} || ' 23:59:59', 'YYYY-MM-DD HH24:MI:SS')]]>
            </if>
        </where>
    </select>

    <select id="selectAdminMileageStats" resultType="kr.co.sist.e_learning.admin.payments.AdminMileageStatsDTO">
        SELECT
            NVL(SUM(CASE WHEN type = &apos;CHARGE&apos; THEN amount ELSE 0 END), 0) AS chargedMileage,
            NVL(SUM(CASE WHEN type = &apos;DONATE&apos; THEN amount ELSE 0 END), 0) AS donatedMileage,
            NVL(SUM(CASE WHEN type = &apos;RECEIVE&apos; THEN amount ELSE 0 END), 0) AS receivedMileage,
            NVL(SUM(amount), 0) AS availableMileage
        FROM
            mile_wallet
    </select>

</mapper>
